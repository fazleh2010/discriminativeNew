elected=15th_mla_elected
mayor_of=17th_mayor_of
graduate_of=1966_graduate_of
republican=2007_republican_candidate
mayor_of=35th_mayor_of
son_of=3rd_son_of
acclaimed_to=acclaimed
state=accorded_state_funeral
lord=accosted_by_lord
served=acquitted_served_out
attracted_nearly_750_million_of=acted
contracted_fever_died=acted
also_enacted_major_reorganization=acted
contracted_by_visit=acted
acted=acted
briefly_acted_president_of=acted
leader_of=acting_leader_of
president_of=acting_president_of
active_in_australian=active
famous_for_his_active=active
member_of=active_member_of
appointed=again_appointed_cabinet_minister
appointed=again_appointed_minister
member_of=also_sat_member_of
secretary_of=also_secretary_of_agriculture
appointed=appointed_general_secretary
......
...
.....



---------------------------
Single word calculation


First direction: predict whether a certain word appears in abstract given the object of the property.
P(word | objectOfPropertyParty)=P(word and objectOfPropertyParty)/P(objectOfPropertyParty)
Example:
word=british
Object of the property party=http://dbpedia.org/resource/Labor_Party_UK (short form res:Labor_Party_UK)

P(british | res:Labor_Party_UK)= 
P(british & res:Labor_Party_UK) / P(res:Labor_Party_UK)

P(british and res:Labor_Party_UK)=the number of entities where object of the property is res:Labor_Party_UK and abstract contains the word british.
P(res:Labor_Party_(UK)): all entities with the object of the property is res:Labor_Party_UK

Second direction: predict the object of the property given certain word in abstract 
P(objectOfPropertyParty | word)=
P(word and objectOfPropertyParty)/P(word)

P(res:Labor_Party_UK | british)= 
P(british & res:Labor_Party_UK / P(british)
P(british): all entities of the property party in which its abstract contain the word british




